
package clientEJB;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PredictionEJB", targetNamespace = "http://predEJB/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PredictionEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns clientEJB.Prediction
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOne", targetNamespace = "http://predEJB/", className = "clientEJB.GetOne")
    @ResponseWrapper(localName = "getOneResponse", targetNamespace = "http://predEJB/", className = "clientEJB.GetOneResponse")
    public Prediction getOne(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns clientEJB.Prediction
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "edit", targetNamespace = "http://predEJB/", className = "clientEJB.Edit")
    @ResponseWrapper(localName = "editResponse", targetNamespace = "http://predEJB/", className = "clientEJB.EditResponse")
    public Prediction edit(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://predEJB/", className = "clientEJB.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://predEJB/", className = "clientEJB.DeleteResponse")
    public String delete(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<clientEJB.Prediction>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll", targetNamespace = "http://predEJB/", className = "clientEJB.GetAll")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "http://predEJB/", className = "clientEJB.GetAllResponse")
    public List<Prediction> getAll();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns clientEJB.Prediction
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://predEJB/", className = "clientEJB.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://predEJB/", className = "clientEJB.CreateResponse")
    public Prediction create(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
